In file included from ../../cross_compiler_interface/cross_compiler_interface.hpp:687:0,
                 from ../unit_test_interface.h:1,
                 from ../unit_test_dll.cpp:6:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp: In instantiation of 'static cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::to_converted_type(const original_type&) [with T = {int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double}; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type = cross_compiler_interface::cross_pair<int, cross_compiler_interface::cross_pair<std::basic_string<char>, double> >; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::original_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]':
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:93:38:   required from 'static void cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::do_return(const return_type&, const converted_type&) [with T = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::return_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:279:35:   required from 'static cross_compiler_interface::error_code cross_compiler_interface::detail::call_adaptor<Iface, N>::vtable_entry_fast<d>::func(const cross_compiler_interface::portable_base*, typename cross_compiler_interface::cross_conversion_return<R>::converted_type*) [with C = ImplementTupleTest; MF = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> (ImplementTupleTest::*)(); MF mf = &ImplementTupleTest::Get3; R = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int d = 0; Iface = ITestTuple::Interface; int N = 4; cross_compiler_interface::error_code = int; typename cross_compiler_interface::cross_conversion_return<R>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:546:4:   required from 'void cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::set_mem_fn(C*) [with C = ImplementTupleTest; typename cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::tm::inner<C, Iface, N>::MFT mf = &ImplementTupleTest::Get3; Iface = ITestTuple::Interface; T = ITestTuple::Interface; int Id = 1; F = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>(); FuncType = cross_compiler_interface::detail::dummy_function<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>()>]'
../unit_test_interface.h:601:3:   required from 'void ITestTuple::Interface<Type>::map_to_member_functions_no_prefix_helper(Derived*, cross_compiler_interface::detail::bool_to_type<true>) [with Derived = ImplementTupleTest; Type = cross_compiler_interface::implement_interface<ITestTuple::Interface>]'
../unit_test_interface.h:601:3:   required from 'void ITestTuple::Interface<Type>::map_to_member_functions_no_prefix(Derived*) [with Derived = ImplementTupleTest; Type = cross_compiler_interface::implement_interface<ITestTuple::Interface>]'
../../cppcomponents/cppcomponents.hpp:801:4:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../../cppcomponents/cppcomponents.hpp:857:56:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::implement_runtime_class_base<Derived, cppcomponents::runtime_class_base<NameType, pfun_runtime_class_name, DefaultInterface, FactoryInterface, StaticInterface, Others ...> >::get_activation_factory(const NameType&) [with NameType = std::basic_string<char>; NameType (* pfun_runtime_class_name)() = TestTupleId; Derived = ImplementTupleTest; DefaultInterface = ITestTuple; FactoryInterface = cppcomponents::DefaultFactoryInterface; StaticInterface = cppcomponents::static_interfaces<>; Others = {}]'
../../cppcomponents/cppcomponents.hpp:889:55:   recursively required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponentWithConstructor; Rest = {ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:889:55:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponent; Rest = {ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:910:53:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::get_activation_factory(const T&) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:919:97:   required from 'cross_compiler_interface::error_code cppcomponents::get_activation_factory(cross_compiler_interface::type_list<Functions ...>, const T&, cross_compiler_interface::portable_base**) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; cross_compiler_interface::error_code = int]'
../unit_test_dll.cpp:511:1:   required from here
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:539:43: error: no matching function for call to 'tuple_to_cross_pair(const original_type&)'
    auto p1 = detail::tuple_to_cross_pair(o);
                                           ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:539:43: note: candidate is:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:512:8: note: template<class Tuple> decltype (cross_compiler_interface::detail::tuple_to_cross_pair_helper(t, typename cross_compiler_interface::detail::make_sequence<std::tuple_size<Tuple>::value>::type())) cross_compiler_interface::detail::tuple_to_cross_pair(const Tuple&)
   auto tuple_to_cross_pair(const Tuple& t)->decltype(tuple_to_cross_pair_helper(t, typename make_sequence<std::tuple_size<Tuple>::value>::type())){
        ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:512:8: note:   template argument deduction/substitution failed:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp: In substitution of 'template<class Tuple> decltype (cross_compiler_interface::detail::tuple_to_cross_pair_helper(t, typename cross_compiler_interface::detail::make_sequence<std::tuple_size<Tuple>::value>::type())) cross_compiler_interface::detail::tuple_to_cross_pair(const Tuple&) [with Tuple = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]':
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:539:43:   required from 'static cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::to_converted_type(const original_type&) [with T = {int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double}; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type = cross_compiler_interface::cross_pair<int, cross_compiler_interface::cross_pair<std::basic_string<char>, double> >; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::original_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:93:38:   required from 'static void cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::do_return(const return_type&, const converted_type&) [with T = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::return_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:279:35:   required from 'static cross_compiler_interface::error_code cross_compiler_interface::detail::call_adaptor<Iface, N>::vtable_entry_fast<d>::func(const cross_compiler_interface::portable_base*, typename cross_compiler_interface::cross_conversion_return<R>::converted_type*) [with C = ImplementTupleTest; MF = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> (ImplementTupleTest::*)(); MF mf = &ImplementTupleTest::Get3; R = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int d = 0; Iface = ITestTuple::Interface; int N = 4; cross_compiler_interface::error_code = int; typename cross_compiler_interface::cross_conversion_return<R>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:546:4:   required from 'void cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::set_mem_fn(C*) [with C = ImplementTupleTest; typename cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::tm::inner<C, Iface, N>::MFT mf = &ImplementTupleTest::Get3; Iface = ITestTuple::Interface; T = ITestTuple::Interface; int Id = 1; F = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>(); FuncType = cross_compiler_interface::detail::dummy_function<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>()>]'
../unit_test_interface.h:601:3:   required from 'void ITestTuple::Interface<Type>::map_to_member_functions_no_prefix_helper(Derived*, cross_compiler_interface::detail::bool_to_type<true>) [with Derived = ImplementTupleTest; Type = cross_compiler_interface::implement_interface<ITestTuple::Interface>]'
../unit_test_interface.h:601:3:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../../cppcomponents/cppcomponents.hpp:857:56:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::implement_runtime_class_base<Derived, cppcomponents::runtime_class_base<NameType, pfun_runtime_class_name, DefaultInterface, FactoryInterface, StaticInterface, Others ...> >::get_activation_factory(const NameType&) [with NameType = std::basic_string<char>; NameType (* pfun_runtime_class_name)() = TestTupleId; Derived = ImplementTupleTest; DefaultInterface = ITestTuple; FactoryInterface = cppcomponents::DefaultFactoryInterface; StaticInterface = cppcomponents::static_interfaces<>; Others = {}]'
../../cppcomponents/cppcomponents.hpp:889:55:   recursively required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponentWithConstructor; Rest = {ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:889:55:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponent; Rest = {ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:910:53:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::get_activation_factory(const T&) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:919:97:   required from 'cross_compiler_interface::error_code cppcomponents::get_activation_factory(cross_compiler_interface::type_list<Functions ...>, const T&, cross_compiler_interface::portable_base**) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; cross_compiler_interface::error_code = int]'
../unit_test_dll.cpp:511:1:   required from here
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:512:145: error: no matching function for call to 'tuple_to_cross_pair_helper(const std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>&, cross_compiler_interface::detail::make_sequence<3, cross_compiler_interface::detail::sequence<> >::type)'
   auto tuple_to_cross_pair(const Tuple& t)->decltype(tuple_to_cross_pair_helper(t, typename make_sequence<std::tuple_size<Tuple>::value>::type())){
                                                                                                                                                 ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:512:145: note: candidate is:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:507:8: note: template<class Tuple, int ...S> decltype (cross_compiler_interface::detail::get_cross_pair((get<S>)(*cross_compiler_interface::detail::tuple_to_cross_pair_helper::t)...)) cross_compiler_interface::detail::tuple_to_cross_pair_helper(const Tuple&, cross_compiler_interface::detail::sequence<seq ...>)
   auto tuple_to_cross_pair_helper(const Tuple& t, sequence<S...>)->decltype(get_cross_pair(std::get<S>(t)...)){
        ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:507:8: note:   template argument deduction/substitution failed:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp: In substitution of 'template<class Tuple, int ...S> decltype (cross_compiler_interface::detail::get_cross_pair((get<S>)(*cross_compiler_interface::detail::tuple_to_cross_pair_helper::t)...)) cross_compiler_interface::detail::tuple_to_cross_pair_helper(const Tuple&, cross_compiler_interface::detail::sequence<seq ...>) [with Tuple = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int ...S = {0, 1, 2}]':
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:512:145:   required by substitution of 'template<class Tuple> decltype (cross_compiler_interface::detail::tuple_to_cross_pair_helper(t, typename cross_compiler_interface::detail::make_sequence<std::tuple_size<Tuple>::value>::type())) cross_compiler_interface::detail::tuple_to_cross_pair(const Tuple&) [with Tuple = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:539:43:   required from 'static cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::to_converted_type(const original_type&) [with T = {int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double}; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type = cross_compiler_interface::cross_pair<int, cross_compiler_interface::cross_pair<std::basic_string<char>, double> >; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::original_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:93:38:   required from 'static void cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::do_return(const return_type&, const converted_type&) [with T = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::return_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:279:35:   required from 'static cross_compiler_interface::error_code cross_compiler_interface::detail::call_adaptor<Iface, N>::vtable_entry_fast<d>::func(const cross_compiler_interface::portable_base*, typename cross_compiler_interface::cross_conversion_return<R>::converted_type*) [with C = ImplementTupleTest; MF = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> (ImplementTupleTest::*)(); MF mf = &ImplementTupleTest::Get3; R = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int d = 0; Iface = ITestTuple::Interface; int N = 4; cross_compiler_interface::error_code = int; typename cross_compiler_interface::cross_conversion_return<R>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:546:4:   required from 'void cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::set_mem_fn(C*) [with C = ImplementTupleTest; typename cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::tm::inner<C, Iface, N>::MFT mf = &ImplementTupleTest::Get3; Iface = ITestTuple::Interface; T = ITestTuple::Interface; int Id = 1; F = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>(); FuncType = cross_compiler_interface::detail::dummy_function<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>()>]'
../unit_test_interface.h:601:3:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../../cppcomponents/cppcomponents.hpp:857:56:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::implement_runtime_class_base<Derived, cppcomponents::runtime_class_base<NameType, pfun_runtime_class_name, DefaultInterface, FactoryInterface, StaticInterface, Others ...> >::get_activation_factory(const NameType&) [with NameType = std::basic_string<char>; NameType (* pfun_runtime_class_name)() = TestTupleId; Derived = ImplementTupleTest; DefaultInterface = ITestTuple; FactoryInterface = cppcomponents::DefaultFactoryInterface; StaticInterface = cppcomponents::static_interfaces<>; Others = {}]'
../../cppcomponents/cppcomponents.hpp:889:55:   recursively required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponentWithConstructor; Rest = {ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:889:55:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponent; Rest = {ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:910:53:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::get_activation_factory(const T&) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:919:97:   required from 'cross_compiler_interface::error_code cppcomponents::get_activation_factory(cross_compiler_interface::type_list<Functions ...>, const T&, cross_compiler_interface::portable_base**) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; cross_compiler_interface::error_code = int]'
../unit_test_dll.cpp:511:1:   required from here
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:507:109: error: no matching function for call to 'get_cross_pair(const int&, const std::basic_string<char>&, const double&)'
   auto tuple_to_cross_pair_helper(const Tuple& t, sequence<S...>)->decltype(get_cross_pair(std::get<S>(t)...)){
                                                                                                             ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:507:109: note: candidates are:
In file included from ../../cross_compiler_interface/cross_compiler_interface.hpp:687:0,
                 from ../unit_test_interface.h:1,
                 from ../unit_test_dll.cpp:6:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:486:8: note: template<class First, class ... Rest> decltype (cross_compiler_interface::make_cross_pair(forward<First>(f), get_cross_pair((forward<Rest>)(cross_compiler_interface::detail::get_cross_pair::r)...))) cross_compiler_interface::detail::get_cross_pair(First&&, Rest&& ...)
   auto get_cross_pair(First && f, Rest && ... r)->decltype(make_cross_pair(std::forward<First>(f), get_cross_pair(std::forward<Rest>(r)...))){
        ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:486:8: note:   template argument deduction/substitution failed:
In file included from ../../cross_compiler_interface/cross_compiler_interface.hpp:687:0,
                 from ../unit_test_interface.h:1,
                 from ../unit_test_dll.cpp:6:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp: In substitution of 'template<class First, class ... Rest> decltype (cross_compiler_interface::make_cross_pair(forward<First>(f), get_cross_pair((forward<Rest>)(cross_compiler_interface::detail::get_cross_pair::r)...))) cross_compiler_interface::detail::get_cross_pair(First&&, Rest&& ...) [with First = const int&; Rest = {const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const double&}]':
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:507:109:   required by substitution of 'template<class Tuple, int ...S> decltype (cross_compiler_interface::detail::get_cross_pair((get<S>)(*cross_compiler_interface::detail::tuple_to_cross_pair_helper::t)...)) cross_compiler_interface::detail::tuple_to_cross_pair_helper(const Tuple&, cross_compiler_interface::detail::sequence<seq ...>) [with Tuple = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int ...S = {0, 1, 2}]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:512:145:   required by substitution of 'template<class Tuple> decltype (cross_compiler_interface::detail::tuple_to_cross_pair_helper(t, typename cross_compiler_interface::detail::make_sequence<std::tuple_size<Tuple>::value>::type())) cross_compiler_interface::detail::tuple_to_cross_pair(const Tuple&) [with Tuple = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:539:43:   required from 'static cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::to_converted_type(const original_type&) [with T = {int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double}; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type = cross_compiler_interface::cross_pair<int, cross_compiler_interface::cross_pair<std::basic_string<char>, double> >; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::original_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:93:38:   required from 'static void cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::do_return(const return_type&, const converted_type&) [with T = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::return_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:279:35:   required from 'static cross_compiler_interface::error_code cross_compiler_interface::detail::call_adaptor<Iface, N>::vtable_entry_fast<d>::func(const cross_compiler_interface::portable_base*, typename cross_compiler_interface::cross_conversion_return<R>::converted_type*) [with C = ImplementTupleTest; MF = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> (ImplementTupleTest::*)(); MF mf = &ImplementTupleTest::Get3; R = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int d = 0; Iface = ITestTuple::Interface; int N = 4; cross_compiler_interface::error_code = int; typename cross_compiler_interface::cross_conversion_return<R>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:546:4:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../../cppcomponents/cppcomponents.hpp:857:56:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::implement_runtime_class_base<Derived, cppcomponents::runtime_class_base<NameType, pfun_runtime_class_name, DefaultInterface, FactoryInterface, StaticInterface, Others ...> >::get_activation_factory(const NameType&) [with NameType = std::basic_string<char>; NameType (* pfun_runtime_class_name)() = TestTupleId; Derived = ImplementTupleTest; DefaultInterface = ITestTuple; FactoryInterface = cppcomponents::DefaultFactoryInterface; StaticInterface = cppcomponents::static_interfaces<>; Others = {}]'
../../cppcomponents/cppcomponents.hpp:889:55:   recursively required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponentWithConstructor; Rest = {ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:889:55:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponent; Rest = {ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:910:53:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::get_activation_factory(const T&) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:919:97:   required from 'cross_compiler_interface::error_code cppcomponents::get_activation_factory(cross_compiler_interface::type_list<Functions ...>, const T&, cross_compiler_interface::portable_base**) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; cross_compiler_interface::error_code = int]'
../unit_test_dll.cpp:511:1:   required from here
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:486:139: error: 'get_cross_pair' was not declared in this scope
   auto get_cross_pair(First && f, Rest && ... r)->decltype(make_cross_pair(std::forward<First>(f), get_cross_pair(std::forward<Rest>(r)...))){
                                                                                                                                           ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:486:139: note: suggested alternative:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:490:8: note:   'cross_compiler_interface::detail::get_cross_pair'
   auto get_cross_pair(First && f, Second && s)->decltype(make_cross_pair(std::forward<First>(f), std::forward<Second>(s))){
        ^
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp: In substitution of 'template<class Tuple, int ...S> decltype (cross_compiler_interface::detail::get_cross_pair((get<S>)(*cross_compiler_interface::detail::tuple_to_cross_pair_helper::t)...)) cross_compiler_interface::detail::tuple_to_cross_pair_helper(const Tuple&, cross_compiler_interface::detail::sequence<seq ...>) [with Tuple = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int ...S = {0, 1, 2}]':
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:512:145:   required by substitution of 'template<class Tuple> decltype (cross_compiler_interface::detail::tuple_to_cross_pair_helper(t, typename cross_compiler_interface::detail::make_sequence<std::tuple_size<Tuple>::value>::type())) cross_compiler_interface::detail::tuple_to_cross_pair(const Tuple&) [with Tuple = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:539:43:   required from 'static cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::to_converted_type(const original_type&) [with T = {int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double}; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::converted_type = cross_compiler_interface::cross_pair<int, cross_compiler_interface::cross_pair<std::basic_string<char>, double> >; cross_compiler_interface::cross_conversion<std::tuple<_Elements ...> >::original_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>]'
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:93:38:   required from 'static void cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::do_return(const return_type&, const converted_type&) [with T = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::return_type = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; cross_compiler_interface::detail::cross_conversion_return_imp<T, false>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:279:35:   required from 'static cross_compiler_interface::error_code cross_compiler_interface::detail::call_adaptor<Iface, N>::vtable_entry_fast<d>::func(const cross_compiler_interface::portable_base*, typename cross_compiler_interface::cross_conversion_return<R>::converted_type*) [with C = ImplementTupleTest; MF = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> (ImplementTupleTest::*)(); MF mf = &ImplementTupleTest::Get3; R = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>; int d = 0; Iface = ITestTuple::Interface; int N = 4; cross_compiler_interface::error_code = int; typename cross_compiler_interface::cross_conversion_return<R>::converted_type = cross_compiler_interface::detail::converted_type_return<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >]'
../../cross_compiler_interface/cross_compiler_interface.hpp:546:4:   required from 'void cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::set_mem_fn(C*) [with C = ImplementTupleTest; typename cross_compiler_interface::cross_function<Iface<cross_compiler_interface::implement_interface<T> >, Id, F, FuncType>::tm::inner<C, Iface, N>::MFT mf = &ImplementTupleTest::Get3; Iface = ITestTuple::Interface; T = ITestTuple::Interface; int Id = 1; F = std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>(); FuncType = cross_compiler_interface::detail::dummy_function<std::tuple<int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>()>]'
../unit_test_interface.h:601:3:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../../cppcomponents/cppcomponents.hpp:857:56:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::implement_runtime_class_base<Derived, cppcomponents::runtime_class_base<NameType, pfun_runtime_class_name, DefaultInterface, FactoryInterface, StaticInterface, Others ...> >::get_activation_factory(const NameType&) [with NameType = std::basic_string<char>; NameType (* pfun_runtime_class_name)() = TestTupleId; Derived = ImplementTupleTest; DefaultInterface = ITestTuple; FactoryInterface = cppcomponents::DefaultFactoryInterface; StaticInterface = cppcomponents::static_interfaces<>; Others = {}]'
../../cppcomponents/cppcomponents.hpp:889:55:   recursively required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponentWithConstructor; Rest = {ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:889:55:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::helper<First, Rest ...>::get_activation_factory(const T&) [with First = ImplementTestComponent; Rest = {ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:910:53:   required from 'static cross_compiler_interface::use<cppcomponents::InterfaceUnknown> cppcomponents::get_activation_factory_helper<T, Imps>::get_activation_factory(const T&) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}]'
../../cppcomponents/cppcomponents.hpp:919:97:   required from 'cross_compiler_interface::error_code cppcomponents::get_activation_factory(cross_compiler_interface::type_list<Functions ...>, const T&, cross_compiler_interface::portable_base**) [with T = const char*; Imps = {ImplementTestComponent, ImplementTestComponentWithConstructor, ImplementTestComponentWithStatic, ImplementTestComponentWithMultipleStatic, ImplementTestComponentWithInheritance, ImplementTestComponentWithForcedPrefixInterfaces, ImplementTestComponentWithMultipleInterfaces, ImplementTestComponentWithRuntimeInheritance, ImplementPerson, ImplementPersonWithEvent, ImplementTestWString, ImplementTupleTest}; cross_compiler_interface::error_code = int]'
../unit_test_dll.cpp:511:1:   required from here
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:490:8: note: template<class First, class Second> decltype (cross_compiler_interface::make_cross_pair(forward<First>(f), forward<Second>(s))) cross_compiler_interface::detail::get_cross_pair(First&&, Second&&)
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:490:8: note:   template argument deduction/substitution failed:
../../cross_compiler_interface/implementation/cross_compiler_conversions.hpp:507:109: note:   candidate expects 2 arguments, 3 provided
   auto tuple_to_cross_pair_helper(const Tuple& t, sequence<S...>)->decltype(get_cross_pair(std::get<S>(t)...)){
                                                                                                             ^
